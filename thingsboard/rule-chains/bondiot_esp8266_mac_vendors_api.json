{
  "ruleChain": {
    "additionalInfo": {
      "description": ""
    },
    "name": "BondIoT-ESP8266-Mac_vendors_API",
    "type": "CORE",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 5,
    "nodes": [
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 28,
          "layoutY": 512
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Add originator attributes",
        "debugMode": true,
        "configuration": {
          "tellFailureIfAbsent": true,
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "passengersRead"
          ],
          "latestTsKeyNames": [],
          "getLatestValueWithTs": false
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 291,
          "layoutY": 248
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "mac ok?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var res_api_error = msg.result.error;\nvar res_api = msg.result;\n\nif (metadata.statusCode == 200){\n    return res_api_error != \"no result\";\n}\n\nreturn false;\n\n/*if (res_api.hasOwnProperty('company'))\n    {\n    return true;\n    }\nelse\n    {\n    if (res_api_error.includes(\"no result\")) \n    {\n    return false;\n    }\n    else\n    {\n    return true;\n    }\n}*/\n"
        }
      },
      {
        "additionalInfo": {
          "description": "C0:9A:D0:AF:50:CD",
          "layoutX": 26,
          "layoutY": 467
        },
        "type": "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode",
        "name": "Generator Node",
        "debugMode": true,
        "configuration": {
          "msgCount": 0,
          "periodInSeconds": 5,
          "jsScript": "var msg = {};\nvar metadata = {MAC_Address:\"Cz:9A:D0\"};\n\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
          "originatorId": "380b62a0-4c8e-11ec-8c14-07468c6f7a3d",
          "originatorType": "DEVICE"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 601,
          "layoutY": 343
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "Save temp MAC passengers",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE",
          "notifyDevice": false
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 297,
          "layoutY": 339
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Increment counter only if MAC address is real.",
        "debugMode": true,
        "configuration": {
          "jsScript": "var newMsgType = \"POST_ATTRIBUTES_REQUEST\";\nvar newMsg = {};\nnewMsg.passengersRead = parseInt(metadata.ss_passengersRead) + 1;\nvar newMetadata = {};\n\nreturn {msg: newMsg, metadata: newMetadata, msgType: newMsgType};"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 293,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.rest.TbRestApiCallNode",
        "name": "Get Mac vendors",
        "debugMode": true,
        "configuration": {
          "restEndpointUrlPattern": "https://macvendors.co/api/$[MACs]",
          "requestMethod": "GET",
          "useSimpleClientHttpFactory": false,
          "ignoreRequestBody": false,
          "enableProxy": false,
          "useSystemProxyProperties": false,
          "proxyScheme": null,
          "proxyHost": null,
          "proxyPort": 0,
          "proxyUser": null,
          "proxyPassword": null,
          "readTimeoutMs": 0,
          "maxParallelRequestsCount": 0,
          "headers": {
            "Content-Type": "application/json"
          },
          "useRedisQueueForMsgPersistence": false,
          "trimQueue": false,
          "maxQueueSize": 0,
          "credentials": {
            "type": "anonymous"
          }
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 1,
        "toIndex": 4,
        "type": "True"
      },
      {
        "fromIndex": 4,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 1,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}